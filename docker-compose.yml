version: '3.8'

networks:
  db-network:
    name: db-network
  queue-network:
    name: queue-network
  api-network:
    name: api-network

volumes:
  mongodb-data:
    name: mongodb-data
  mssql-data:
    name: mssql-data
  rabbitmq-data:
    name: rabbitmq-data
  
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports: 
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - db-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: sysadmin
      MONGO_INITDB_ROOT_PASSWORD: mongodb@1

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - queue-network
    environment:
      RABBITMQ_DEFAULT_VHOST: chatroom
      RABBITMQ_DEFAULT_USER: sysadmin
      RABBITMQ_DEFAULT_PASS: rabbitmq@1

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql
    user: root
    ports:
      - "1434:1433"
    volumes:
      - mssql-data:/var/opt/mssql/data
      - mssql-data:/var/opt/mssql/log
      - mssql-data:/var/opt/mssql/secrets
    networks:
      - db-network
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: MSSQL@admin1
      MSSQL_PID: Developer

  dotnet-chatroom:
    image: dotnet.chatroom.api:latest
    build:
      context: ./src
      dockerfile: ./dotnet.chatroom/Dockerfile
    container_name: dotnet.chatroom.api
    ports:
      - "8081:80"
      - "4431:443"
    networks:
      - queue-network
      - db-network
      - api-network
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      - mssql
      - rabbitmq
      - mongodb

  dotnet-chatroom-bot:
    image: dotnet.chatroom.bot:latest
    build:
      context: ./src
      dockerfile: ./dotnet.chatroom.bot/Dockerfile
    container_name: dotnet.chatroom.bot
    ports:
      - "8082:80"
      - "4432:443"
    networks:
      - queue-network
      - db-network
      - api-network
    environment:
      APPLICATION_NAME: Dotnet Chatroom
      ASPNETCORE_ENVIRONMENT: Production
      CORS_ORIGINS: http://localhost:4200,http://dotnet.chatroom.app:80
      MONGO_CONNECTION_STRING: mongodb://sysadmin:mongodb%401@mongodb:27017/?authSource=admin&readPreference=primary&appname=Dotnet.ChatRoom&directConnection=true&ssl=false
      MONGO_DATABASE: stocks
      MONGO_GRID_FS_DATABASE: files
      RABBITMQ_URI: amqp://sysadmin:rabbitmq%401@rabbitmq:5672/chatroom
      QUEUE_STOCK_QUOTE_IN: bot::stock.quote.in
      QUEUE_STOCK_QUOTE_OUT: bot::stock.quote.out
      STOOQ_API: https://stooq.com/q/l/?s={0}&f=sd2t2ohlcv&h&e=csv
      HANDLE_TIMOUT: 60000
    depends_on:
      - rabbitmq
      - mongodb

  dotnet-chatroom-app:
    image: dotnet.chatroom.app:latest
    build:
      context: ./src
      dockerfile: ./dotnet.chatroom.app/Dockerfile
    container_name: dotnet.chatroom.app
    ports:
      - "8083:80"
    networks:
      - api-network